<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Piyush's site</title>
		<description>Piyush's site</description>
		<link>/</link>
		<atom:link href="/" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Priority Queues in C++</title>
				<description>&lt;p&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/functional/less/&quot;&gt;http://www.cplusplus.com/reference/functional/less/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In priority_queue, the native pop function is implemented as pop_back().
So to implement a min_heap, your comparator function is greater&lt;int&gt; &amp;amp;
for max_heap it is less&lt;int&gt;&lt;/int&gt;&lt;/int&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
Syntax of priority_queue
&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, less&amp;lt;int&amp;gt; &amp;gt; max_heap;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt;int&amp;gt; &amp;gt; min_heap;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Example of a  priority_queue with custom comparator function&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;priority_queue&amp;lt;ListNode*, vector&amp;lt;ListNode*&amp;gt;, CompareNode&amp;gt; min_heap;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;struct CompareNode {&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;bool operator()(ListNode* const &amp;amp;p1, ListNode* const &amp;amp;p2) {&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;return p1-&amp;gt;val &amp;gt; p2-&amp;gt;val;&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Mon, 10 Oct 2016 00:00:00 -0400</pubDate>
				<link>/code/2016/10/10/priority-queues-in-c++.html</link>
				<guid isPermaLink="true">/code/2016/10/10/priority-queues-in-c++.html</guid>
			</item>
		
			<item>
				<title>Ascii conversion from char to int & back in C++</title>
				<description>&lt;p&gt;Ascii values&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;a = 97, z = 122&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;A = 65, Z = 90&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;0 = 48&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;char ch = 'z';&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;int num = (int)ch-'a'; // 122-97 =25&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;char y = char(num)+'a'; // 25+97 = 122&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cout &amp;lt;&amp;lt; y;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;char one = '1'&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;int ans = int(one) - '0' // 49-48 = 1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;cout &amp;lt;&amp;lt; ans; //get one&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Mon, 12 Sep 2016 00:00:00 -0400</pubDate>
				<link>/ascii/2016/09/12/Int-to-char-and-back-c++.html</link>
				<guid isPermaLink="true">/ascii/2016/09/12/Int-to-char-and-back-c++.html</guid>
			</item>
		
			<item>
				<title>Reading a file line by line in C++</title>
				<description>&lt;p&gt;Read a file line by line in C++&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#include &amp;lt;fstream&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#include &amp;lt;string&amp;gt;&lt;/span&gt;


&lt;span class=&quot;s&quot;&gt;int main()&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ifstream file(&quot;Read.txt&quot;);&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;string str;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;while (std&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;getline(file&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;str))&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;// Process str&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span class=&quot;s&quot;&gt;ifstream file(&quot;/Users/piyushkhemka/Downloads/MCC/fmn.txt&quot;, ios::in);&lt;/span&gt;

   &lt;span class=&quot;s&quot;&gt;while(getline(file, line)) {&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;stringstream lines(line);&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;vector&amp;lt;int&amp;gt; v;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;string b;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;getline(lines, b, '\n');&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;string temp;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;for(int i = 0;i&amp;lt;b.length();i++) {&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;if(b[i]!=' ') {&lt;/span&gt;
               &lt;span class=&quot;s&quot;&gt;temp = temp+b[i];&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;else {&lt;/span&gt;
               &lt;span class=&quot;s&quot;&gt;v.push_back(stoi(temp));&lt;/span&gt;
               &lt;span class=&quot;s&quot;&gt;temp.clear();&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;v.push_back(stoi(temp));&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;int sum = 0; // Process each line here&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;for(auto it = v.begin();it!=v.end();it++) {&lt;/span&gt;
           &lt;span class=&quot;s&quot;&gt;sum+= *it;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;cout &amp;lt;&amp;lt; sum;&lt;/span&gt;
       &lt;span class=&quot;s&quot;&gt;cout &amp;lt;&amp;lt; endl &amp;lt;&amp;lt; endl&amp;lt;&amp;lt; endl &amp;lt;&amp;lt; endl&amp;lt;&amp;lt; endl &amp;lt;&amp;lt; endl;&lt;/span&gt;
   &lt;span class=&quot;s&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Sun, 12 Jun 2016 00:00:00 -0400</pubDate>
				<link>/general/2016/06/12/Reading-a-file-in-C++.html</link>
				<guid isPermaLink="true">/general/2016/06/12/Reading-a-file-in-C++.html</guid>
			</item>
		
	</channel>
</rss>
